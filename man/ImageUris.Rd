% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image_uris.R
\name{ImageUris}
\alias{ImageUris}
\title{ImageUris Class}
\description{
Class to create and format sagemaker docker images stored in ECR
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sagemaker_session}}{Session object which manages interactions with Amazon SageMaker APIs}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ImageUris$new()}}
\item \href{#method-retrieve}{\code{ImageUris$retrieve()}}
\item \href{#method-list_ecr_uris}{\code{ImageUris$list_ecr_uris()}}
\item \href{#method-clear_cache}{\code{ImageUris$clear_cache()}}
\item \href{#method-ecr_tags}{\code{ImageUris$ecr_tags()}}
\item \href{#method-retrieve_ecr_uri}{\code{ImageUris$retrieve_ecr_uri()}}
\item \href{#method-clone}{\code{ImageUris$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes the ``ImageUris`` class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$new(sagemaker_session = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sagemaker_session}}{(sagemaker.session.Session): Session object which
manages interactions with Amazon SageMaker APIs and any other
AWS services needed. If not specified, the estimator creates one
using the default AWS configuration chain.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-retrieve"></a>}}
\if{latex}{\out{\hypertarget{method-retrieve}{}}}
\subsection{Method \code{retrieve()}}{
Retrieves the ECR URI for the Docker image matching the given arguments of inbuilt AWS Sagemaker models.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$retrieve(
  framework,
  region = NULL,
  version = NULL,
  py_version = NULL,
  instance_type = NULL,
  accelerator_type = NULL,
  image_scope = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{framework}}{(str): The name of the framework or algorithm.}

\item{\code{region}}{(str): The AWS region.}

\item{\code{version}}{(str): The framework or algorithm version. This is required if there is
more than one supported version for the given framework or algorithm.}

\item{\code{py_version}}{(str): The Python version. This is required if there is
more than one supported Python version for the given framework version.}

\item{\code{instance_type}}{(str): The SageMaker instance type. For supported types, see
https://aws.amazon.com/sagemaker/pricing/instance-types. This is required if
there are different images for different processor types.}

\item{\code{accelerator_type}}{(str): Elastic Inference accelerator type. For more, see
https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html.}

\item{\code{image_scope}}{(str): The image type, i.e. what it is used for.
Valid values: "training", "inference", "eia". If ``accelerator_type`` is set,
``image_scope`` is ignored.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
str: the ECR URI for the corresponding SageMaker Docker image.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_ecr_uris"></a>}}
\if{latex}{\out{\hypertarget{method-list_ecr_uris}{}}}
\subsection{Method \code{list_ecr_uris()}}{
lists URIs of custom built models stored in ECR
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$list_ecr_uris(force_refresh = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{force_refresh}}{(bool): Set to True to fetch the latest data from
SageMaker API.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(data.frame): containing all custom built models
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear_cache"></a>}}
\if{latex}{\out{\hypertarget{method-clear_cache}{}}}
\subsection{Method \code{clear_cache()}}{
Clear the object of all local caches of API methods, so that the next
             time any properties are accessed they will be refreshed from the
             service.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$clear_cache()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ecr_tags"></a>}}
\if{latex}{\out{\hypertarget{method-ecr_tags}{}}}
\subsection{Method \code{ecr_tags()}}{
Gets tags of framework stored in ECR
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$ecr_tags(repo_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repo_name}}{(str): The name of the repository name stored in ECR.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(data.frame): listing all tagged version of repository names ordered by time stamp.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-retrieve_ecr_uri"></a>}}
\if{latex}{\out{\hypertarget{method-retrieve_ecr_uri}{}}}
\subsection{Method \code{retrieve_ecr_uri()}}{
Retrieves the ECR URI for the Docker image matching the given arguments for custome inbuilt models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$retrieve_ecr_uri(repo_name, tag = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repo_name}}{(str): The name of the repository that stores framework or algorithm in ecr}

\item{\code{tag}}{(str): The framework or algorithm version. This is required if there is
more than one supported version for the given framework or algorithm.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImageUris$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
